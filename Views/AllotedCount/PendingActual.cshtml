@model bhati_jatha_count_report.Models.ViewModels.PendingActualCountViewModel
@{
  ViewData["Title"] = "Alloted vs Actual (Compact)";
}
<div class="container-fluid">
  <h2 class="mb-3">Alloted vs Actual (Compact)</h2>
  <form method="get" class="mb-2">
    <div class="row g-2 align-items-end">
      <div class="col-auto">
        <label for="date" class="form-label">Date</label>
        <input type="date" class="form-control form-control-sm" id="date" name="date" value="@Model.SelectedDate.ToString("yyyy-MM-dd")" onchange="this.form.submit()" />
      </div>
    </div>
  </form>
  <style>
    .pending-actual-table th,
    .pending-actual-table td {
      min-width: 90px;
      max-width: 110px;
      width: 100px;
      word-break: break-word;
      white-space: normal;
      text-align: center;
      vertical-align: middle;
    }

    .pending-actual-table th {
      overflow-wrap: break-word;
      word-break: break-word;
      white-space: normal;
    }

    .pending-actual-table thead th {
      position: sticky;
      top: 0;
      z-index: 3;
      background: #f8f9fa;
    }

    .highlight-cell {
      background-color: #fff9c4 !important;
      /* light yellow */
      transition: background 0.2s;
    }
  </style>
  <div class="table-responsive" style="max-height: 60vh; overflow-y: auto;">
    <table class="table table-bordered table-striped table-sm pending-actual-table" style="font-size: 0.85rem; min-width: 600px;">
      <thead class="table-light">
        <tr>
          <th style="position: sticky; left: 0; background: #f8f9fa; z-index: 2;">Center <br /> Sewa Type</th>
          @foreach (var sewaType in Model.SewaTypes)
          {
            <th>@sewaType.SewaName</th>
          }
        </tr>
      </thead>
      <tbody>
        @foreach (var center in Model.Centers)
        {
          bool hasAnyValue = false;
          foreach (var sewaType in Model.SewaTypes)
          {
            var alloted = Model.GetAllotedCount(center.Id, sewaType.Id);
            var actual = Model.GetActualCount(center.Id, sewaType.Id);
            if (alloted.HasValue || actual.HasValue) { hasAnyValue = true; break; }
          }
          if (!hasAnyValue) { continue; }
          <tr>
            <th style="position: sticky; left: 0; background: #f8f9fa; z-index: 1;">@center.CenterName</th>
            @foreach (var sewaType in Model.SewaTypes)
            {
              var alloted = Model.GetAllotedCount(center.Id, sewaType.Id);
              var actual = Model.GetActualCount(center.Id, sewaType.Id);
              var highlight = (alloted.HasValue || actual.HasValue) ? "highlight-cell" : "";
              <td class="@highlight">
                <span title="Alloted">@(alloted.HasValue? alloted.Value.ToString() : "-")</span>
                <span style="color: #888;">/</span>
                <span title="Actual" style="color: @(actual.HasValue ? (actual.Value >= (alloted ?? 0) ? "#28a745" : "#dc3545") : "#888")">
                  @(actual.HasValue? actual.Value.ToString() : "-")
                </span>
              </td>
            }
          </tr>
        }
      </tbody>
    </table>
  </div>
  @if (!Model.Centers.Any() || !Model.SewaTypes.Any())
  {
    <div class="alert alert-info mt-3">No data available for the selected date.</div>
  }
</div>