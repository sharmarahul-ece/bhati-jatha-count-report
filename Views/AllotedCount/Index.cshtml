@model bhati_jatha_count_report.Models.ViewModels.AllotedCountPageViewModel
@{
  ViewData["Title"] = "Manage Alloted Counts";
}
<div class="container">
  <h2 class="mb-4">Manage Alloted Counts</h2>
  <div class="row mb-3 align-items-end">
    <div class="col-md-3">
      <label for="filterCenter" class="form-label">Center</label>
      <select id="filterCenter" class="form-select">
        <option value="">All</option>
        @foreach (var c in Model.Centers)
        {
          <option value="@c.Id">@c.CenterName</option>
        }
      </select>
    </div>
    <div class="col-md-3">
      <label for="filterWeekDay" class="form-label">Week Day</label>
      <select id="filterWeekDay" class="form-select">
        <option value="">All</option>
        <option value="0">Sunday</option>
        <option value="1">Monday</option>
        <option value="2">Tuesday</option>
        <option value="3">Wednesday</option>
        <option value="4">Thursday</option>
        <option value="5">Friday</option>
        <option value="6">Saturday</option>
      </select>
    </div>
    <div class="col-md-3">
      <label for="filterSewaType" class="form-label">Sewa Type</label>
      <select id="filterSewaType" class="form-select">
        <option value="">All</option>
        @foreach (var s in Model.SewaTypes)
        {
          <option value="@s.Id">@s.SewaName</option>
        }
      </select>
    </div>
    <div class="col-md-3 d-flex flex-column gap-2">
  <button type="button" class="btn btn-primary btn-sm w-100 mb-2" data-bs-toggle="modal" data-bs-target="#allotedCountModal" onclick="resetForm()">
        <i class="bi bi-plus-circle"></i> Add Record
      </button>
    </div>
  </div>
  <div class="table-responsive">
  <table class="table table-sm table-striped table-hover" id="allotedCountTable">
      <thead class="table-light">
        <tr>
          <th>Week Day</th>
          <th>Center</th>
          <th>Sewa Type</th>
          <th>Alloted Count</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="allotedCountTableBody">
        <!-- Rows will be rendered by JS -->
      </tbody>
    </table>
  </div>

  <!-- Modal -->
  <div class="modal fade" id="allotedCountModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="modalTitle">Add Record</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="allotedCountForm">
            @Html.AntiForgeryToken()
            <div class="mb-3">
              <label for="weekDay" class="form-label">Week Day</label>
              <select class="form-select" id="weekDay" required>
                <option value="">Select Week Day</option>
                <option value="0">Sunday</option>
                <option value="1">Monday</option>
                <option value="2">Tuesday</option>
                <option value="3">Wednesday</option>
                <option value="4">Thursday</option>
                <option value="5">Friday</option>
                <option value="6">Saturday</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="centerId" class="form-label">Center</label>
              <select class="form-select" id="centerId" required>
                <option value="">Select Center</option>
                @foreach (var c in Model.Centers)
                {
                  <option value="@c.Id">@c.CenterName</option>
                }
              </select>
            </div>
            <div class="mb-3">
              <label for="sewaTypeId" class="form-label">Sewa Type</label>
              <select class="form-select" id="sewaTypeId" required>
                <option value="">Select Sewa Type</option>
                @foreach (var s in Model.SewaTypes)
                {
                  <option value="@s.Id">@s.SewaName</option>
                }
              </select>
            </div>
            <div class="mb-3">
              <label for="count" class="form-label">Count</label>
              <input type="number" class="form-control" id="count" required min="0" />
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary btn-sm" onclick="saveAllotedCount()">Save</button>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script>
    // Serialized objects from server use PascalCase property names (e.g. WeekDay, CenterId, Count).
    let allotedCountData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.AllotedCounts));
    const weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
    const centers = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Centers));
    const sewaTypes = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SewaTypes));

    function resetForm() {
      document.getElementById('allotedCountForm').reset();
      document.getElementById('modalTitle').textContent = 'Add Record';
    }

    function renderTable() {
      const tbody = document.getElementById('allotedCountTableBody');
      tbody.innerHTML = '';
      const centerId = document.getElementById('filterCenter').value;
      const weekDay = document.getElementById('filterWeekDay').value;
      const sewaTypeId = document.getElementById('filterSewaType').value;
      let filtered = allotedCountData;
      if (centerId) filtered = filtered.filter(x => x.CenterId == centerId);
      if (weekDay) filtered = filtered.filter(x => x.WeekDay == weekDay);
      if (sewaTypeId) filtered = filtered.filter(x => x.SewaTypeId == sewaTypeId);
      filtered.forEach(item => {
        const tr = document.createElement('tr');
        const wd = item.WeekDay;
        const center = centers.find(c => c.Id === item.CenterId);
        const sewa = sewaTypes.find(s => s.Id === item.SewaTypeId);
        tr.innerHTML = `
              <td>${weekDays[wd]}</td>
              <td>${center ? center.CenterName : ''}</td>
              <td>${sewa ? sewa.SewaName : ''}</td>
              <td>${item.Count}</td>
              <td>
                <button class="btn btn-sm btn-primary me-2 edit-btn" data-weekday="${item.WeekDay}" 
                        data-center="${item.CenterId}" data-sewa="${item.SewaTypeId}">
                  <i class="bi bi-pencil"></i> Edit
                </button>
                <button class="btn btn-sm btn-danger delete-btn" data-weekday="${item.WeekDay}" 
                        data-center="${item.CenterId}" data-sewa="${item.SewaTypeId}">
                  <i class="bi bi-trash"></i> Delete
                </button>
              </td>
            `;
        tbody.appendChild(tr);
      });
    }

    function saveAllotedCount() {
      const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
      const data = {
        WeekDay: parseInt(document.getElementById('weekDay').value),
        CenterId: parseInt(document.getElementById('centerId').value),
        SewaTypeId: parseInt(document.getElementById('sewaTypeId').value),
        Count: parseInt(document.getElementById('count').value)
      };

      fetch('/AllotedCount/Save', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'RequestVerificationToken': token
        },
        body: JSON.stringify(data)
      })
        .then(r => r.json())
        .then(res => {
          if (res.success) window.location.reload();
          else alert(res.message);
        });
    }

    document.querySelector('#allotedCountTable').addEventListener('click', function (e) {
      if (e.target.closest('.edit-btn')) {
        const btn = e.target.closest('.edit-btn');
        const weekDay = btn.dataset.weekday;
        const centerId = btn.dataset.center;
        const sewaTypeId = btn.dataset.sewa;

        fetch(`/AllotedCount/Get?weekDay=${weekDay}&centerId=${centerId}&sewaTypeId=${sewaTypeId}`)
          .then(r => r.json())
          .then(res => {
            if (res.success) {
              const d = res.data;
              // use PascalCase fields from server
              document.getElementById('weekDay').value = d.WeekDay;
              document.getElementById('centerId').value = d.CenterId;
              document.getElementById('sewaTypeId').value = d.SewaTypeId;
              document.getElementById('count').value = d.Count;
              document.getElementById('modalTitle').textContent = 'Edit Record';
              new bootstrap.Modal(document.getElementById('allotedCountModal')).show();
            }
          });
      }

      if (e.target.closest('.delete-btn')) {
        const btn = e.target.closest('.delete-btn');
        const weekDay = btn.dataset.weekday;
        const centerId = btn.dataset.center;
        const sewaTypeId = btn.dataset.sewa;

        if (confirm('Are you sure you want to delete this record?')) {
          const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
          fetch(`/AllotedCount/Delete?weekDay=${weekDay}&centerId=${centerId}&sewaTypeId=${sewaTypeId}`, {
            method: 'DELETE',
            headers: { 'RequestVerificationToken': token }
          })
            .then(r => r.json())
            .then(res => {
              if (res.success) window.location.reload();
              else alert(res.message);
            });
        }
      }
    });

    // Initial render
    renderTable();
    document.getElementById('filterCenter').addEventListener('change', renderTable);
    document.getElementById('filterWeekDay').addEventListener('change', renderTable);
    document.getElementById('filterSewaType').addEventListener('change', renderTable);
  </script>
}