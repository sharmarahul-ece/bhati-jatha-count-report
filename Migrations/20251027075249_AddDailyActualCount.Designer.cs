// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bhati_jatha_count_report.Data;

#nullable disable

namespace bhati_jatha_count_report.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251027075249_AddDailyActualCount")]
    partial class AddDailyActualCount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("bhati_jatha_count_report.Models.Entities.Center", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CenterName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CenterType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Centers");
                });

            modelBuilder.Entity("bhati_jatha_count_report.Models.Entities.DailyActualCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CenterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("NominalRollToken")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("SewaTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TokenNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.HasIndex("SewaTypeId");

                    b.ToTable("DailyActualCounts");
                });

            modelBuilder.Entity("bhati_jatha_count_report.Models.Entities.SewaNominalRoll", b =>
                {
                    b.Property<string>("NominalRollToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SewaDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CentreName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Females")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InchargeContact")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InchargeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JourneyDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Males")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SewaDuration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SewaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SewaStartTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SewaType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceFileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalSewadars")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NominalRollToken", "SewaDate");

                    b.ToTable("SewaNominalRolls");
                });

            modelBuilder.Entity("bhati_jatha_count_report.Models.Entities.SewaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SewaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SewaTypes");
                });

            modelBuilder.Entity("bhati_jatha_count_report.Models.Entities.DailyActualCount", b =>
                {
                    b.HasOne("bhati_jatha_count_report.Models.Entities.Center", "Center")
                        .WithMany()
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("bhati_jatha_count_report.Models.Entities.SewaType", "SewaType")
                        .WithMany()
                        .HasForeignKey("SewaTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Center");

                    b.Navigation("SewaType");
                });
#pragma warning restore 612, 618
        }
    }
}
